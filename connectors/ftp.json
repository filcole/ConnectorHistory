{
  "UniqueName": "ftp",
  "DocumentationUrl": "https://docs.microsoft.com/en-us/connectors/connector-reference/../ftp/",
  "Actions": [
    {
      "OperationId": "CopyFile",
      "Name": "Copy file",
      "Description": "This operation copies a file to an FTP server. If a file is being deleted/renamed on server right after it was copied, connector may return HTTP 404 error by it's design. Please use a delay for 1 minute before deleting or renaming newly created file.",
      "Anchor": "#copy-file",
      "IsDeprecated": false
    },
    {
      "OperationId": "CreateFile",
      "Name": "Create file",
      "Description": "This operation creates a file. If a file is being deleted/renamed on server right after it was created, connector may return HTTP 404 error by it's design. Please use a delay for 1 minute before deleting or renaming newly created file.",
      "Anchor": "#create-file",
      "IsDeprecated": false
    },
    {
      "OperationId": "DeleteFile",
      "Name": "Delete file",
      "Description": "This operation deletes a file.",
      "Anchor": "#delete-file",
      "IsDeprecated": false
    },
    {
      "OperationId": "ExtractFolderV2",
      "Name": "Extract archive to folder",
      "Description": "This operation extracts an archive file into a folder (example: .zip).",
      "Anchor": "#extract-archive-to-folder",
      "IsDeprecated": false
    },
    {
      "OperationId": "GetFileContent",
      "Name": "Get file content",
      "Description": "This operation gets the content of a file.",
      "Anchor": "#get-file-content",
      "IsDeprecated": false
    },
    {
      "OperationId": "GetFileContentByPath",
      "Name": "Get file content using path",
      "Description": "This operation gets the content of a file using the file path.",
      "Anchor": "#get-file-content-using-path",
      "IsDeprecated": false
    },
    {
      "OperationId": "GetFileMetadata",
      "Name": "Get file metadata",
      "Description": "This operation gets the metadata for a file.",
      "Anchor": "#get-file-metadata",
      "IsDeprecated": false
    },
    {
      "OperationId": "GetFileMetadataByPath",
      "Name": "Get file metadata using path",
      "Description": "This operation gets the metadata of a file using the file path.",
      "Anchor": "#get-file-metadata-using-path",
      "IsDeprecated": false
    },
    {
      "OperationId": "ListFolder",
      "Name": "List files in folder",
      "Description": "This operation gets the list of files and subfolders in a folder.",
      "Anchor": "#list-files-in-folder",
      "IsDeprecated": false
    },
    {
      "OperationId": "ListRootFolder",
      "Name": "List files in root folder",
      "Description": "This operation gets the list of files and subfolders in the root folder.",
      "Anchor": "#list-files-in-root-folder",
      "IsDeprecated": false
    },
    {
      "OperationId": "OnUpdatedFile",
      "Name": "When a file is added or modified [DEPRECATED]",
      "Description": "This operation triggers a flow when a file is added or modified in a folder. The trigger will fetch both the file metadata as well as the content of the file. The trigger relies on the last modified time of a file. If a file is being created by a third-party client, the preservation of the last modified time should be disabled in the client. Files larger than 50 megabytes are skipped by the trigger. The trigger does not fire if a file is added/updated in a subfolder. If it is required to trigger on subfolders, multiple triggers should be created.",
      "Anchor": "#when-a-file-is-added-or-modified-[deprecated]",
      "IsDeprecated": true
    },
    {
      "OperationId": "OnUpdatedFiles",
      "Name": "When a file is added or modified (properties only)",
      "Description": "This operation triggers a flow when one or more files are added or modified in a folder. This trigger will only fetch the file metadata. To get the file content, you can use the &quot;Get file content&quot; operation. The trigger relies on the last modified time of a file. If a file is being created by a third-party client, the preservation of the last modified time should be disabled in the client. The trigger does not fire if a file is added/updated in a subfolder. If it is required to trigger on subfolders, multiple triggers should be created.",
      "Anchor": "#when-a-file-is-added-or-modified-(properties-only)",
      "IsDeprecated": false
    },
    {
      "OperationId": "UpdateFile",
      "Name": "Update file",
      "Description": "This operation updates a file. If a file is being deleted/renamed on server right after it was updated, connector may return HTTP 404 error by it's design. Please use a delay for 1 minute before deleting or renaming recently updated file.",
      "Anchor": "#update-file",
      "IsDeprecated": false
    }
  ]
}