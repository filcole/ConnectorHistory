{
  "UniqueName": "iaconnectjava",
  "DocumentationUrl": "https://docs.microsoft.com/en-us/connectors/connector-reference/../iaconnectjava/",
  "Actions": [
    {
      "OperationId": "JABCheckElement",
      "Name": "Check Java element",
      "Description": "Sets the state of an element (typically a checkbox or radio box) to either checked or unchecked.",
      "Anchor": "#check-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABConnectToJavaAccessBridge",
      "Name": "Connect to Java Access Bridge",
      "Description": "Starts the IA-Connect Java subsystem (IA-JavaAccessBridge) and connects it to the specified Java Access Bridge DLL (or leave blank to search for one). This step must be performed before you can automate Java applications. This action also enables the Java Access Bridge which must be enabled before running any Java applications.",
      "Anchor": "#connect-to-java-access-bridge",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABCreateHandleForJABElementAtScreenCoordinate",
      "Name": "Create handle for Java element at screen coordinate",
      "Description": "Creates a handle to a Java element by providing the screen coordinates. If a Java element exists at the specified coordinate, the action will identify the element and return a handle to it.",
      "Anchor": "#create-handle-for-java-element-at-screen-coordinate",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABDisconnectFromJavaAccessBridge",
      "Name": "Disconnect from Java Access Bridge",
      "Description": "Shuts down any running IA-Connect Java subsystem (IA-JavaAccessBridge).",
      "Anchor": "#disconnect-from-java-access-bridge",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABDoesDesktopElementExist",
      "Name": "Does Java desktop element exist",
      "Description": "Reports whether a Java desktop element exists and provides some basic element properties.",
      "Anchor": "#does-java-desktop-element-exist",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABDoesElementExist",
      "Name": "Does Java element exist",
      "Description": "Reports whether a Java element exists and returns some basic element properties.",
      "Anchor": "#does-java-element-exist",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABDrawRectangleAroundJABElement",
      "Name": "Draw rectangle around Java element",
      "Description": "Draws a rectangle around the perimeter of a Java element to aid in identifying that the element found is the one required. The rectangle is automatically removed after 5 seconds.",
      "Anchor": "#draw-rectangle-around-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABExpandSelection",
      "Name": "Expand Java selection element",
      "Description": "Expands or collapses a Java element (typically a menu / dropdown item). If the item is already expanded, nothing will happen.",
      "Anchor": "#expand-java-selection-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABFocusElement",
      "Name": "Focus Java element",
      "Description": "Focusses a Java element which makes it the active element for keyboard focus and, depending on the application, may bring the element window to the foreground.",
      "Anchor": "#focus-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABFreeAllJABHandles",
      "Name": "Reset all Java element handles",
      "Description": "Resets all Java element handles currently stored by IA-Connect which can be useful if you have been identifying a lot of elements and have a large number of element handles stored. In scenarios with extremely high numbers of element handles (100,000+) this action can also be used to free up RAM usage.",
      "Anchor": "#reset-all-java-element-handles",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetActionsForElement",
      "Name": "Get actions for Java element",
      "Description": "Returns the accessible actions for a Java element. These accessible actions can then be performed on the element by using the action name as an input to the action 'Perform action on Java element', for example 'click' or 'select-all'.",
      "Anchor": "#get-actions-for-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetAllChildJABElementProperties",
      "Name": "Get all Java child element properties",
      "Description": "Returns all properties of all Java child elements. This can be useful if you are uncertain which field holds the property values required.",
      "Anchor": "#get-all-java-child-element-properties",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetChildJABElementProperties",
      "Name": "Get Java child element properties",
      "Description": "Returns all properties of a specific Java child element, specified by index. This can be useful if you are uncertain which field holds the property values required.",
      "Anchor": "#get-java-child-element-properties",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetConnectionStatus",
      "Name": "Get windows access bridge connection status",
      "Description": "Returns the current status of the connection between IA-Connect Agent and the Windows Access Bridge (WAB). If IA-Connect Agent is connected to the WAB then the relevant details are returned as outputs.",
      "Anchor": "#get-windows-access-bridge-connection-status",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetDesktopElements",
      "Name": "Get Java desktop elements",
      "Description": "Returns a list of Java application windows and dialogs on the desktop. You must first connect to the Java Access Bridge.",
      "Anchor": "#get-java-desktop-elements",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetElementPropertiesAsList",
      "Name": "Get Java element properties as list",
      "Description": "Returns the properties of a Java element as a single line list (single line collection / data table) instead of individual items, this maybe useful depending on how you intend to use the data.",
      "Anchor": "#get-java-element-properties-as-list",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetElementTextValue",
      "Name": "Get Java element text value",
      "Description": "Returns the text value of a Java element. A text value is usually associated with a text element, but many elements can have this property.",
      "Anchor": "#get-java-element-text-value",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetElementValue",
      "Name": "Get Java element value",
      "Description": "Returns the value of an element. A value is usually associated with a text input area, but many elements can have this property.",
      "Anchor": "#get-java-element-value",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetJABElementProperties",
      "Name": "Get Java element properties",
      "Description": "Returns all Java properties of a Java element. This can be useful if you are uncertain which field holds the property values required.",
      "Anchor": "#get-java-element-properties",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetMultipleParentJABElementProperties",
      "Name": "Get multiple Java parent element properties",
      "Description": "Returns the properties of all parent elements of a Java element. This action will search the entire height of the element tree returning all parent properties if the 'Max parents to process' parameter is set high enough.",
      "Anchor": "#get-multiple-java-parent-element-properties",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetParentJABElementProperties",
      "Name": "Get Java parent element properties",
      "Description": "Returns the properties of the parent element of a Java element. This action will only return the properties of the direct parent element and will not search the entire height of the element tree.",
      "Anchor": "#get-java-parent-element-properties",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetRoleCSVFromElementHandle",
      "Name": "Get Java role CSV from element handle",
      "Description": "Returns the tree of element roles below the specified element handle as CSV. This action would only be used for development purposes and provides an overview of the elements of the application which can be useful for visualising the application structure and optimising element searches.",
      "Anchor": "#get-java-role-csv-from-element-handle",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetRoleCSVFromElementSearch",
      "Name": "Get Java role CSV from element search",
      "Description": "Performs a Java element search and outputs the details of the elements searched (up to the point where the element was found) as CSV. This action would only be used for development purposes and provides an overview of the elements of the application which can be useful for visualising the application structure and optimising element searches.",
      "Anchor": "#get-java-role-csv-from-element-search",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetSelectionElementItems",
      "Name": "Get Java selection element items",
      "Description": "Returns all child selection element items found under the specified Java selection element. You can choose to retrieve the selection element options either by looping through the selection, selecting each individual option in the list OR by reading the labels of the child elements of the selection. If you choose to retrieve the selection element options by reading the labels of the child elements of the selection, you will likely need to expand the selection first by providing the 'Expand first' parameter as 'True' and you can then optionally close the selection afterwards by also providing the 'Collapse after' parameter as 'True'.",
      "Anchor": "#get-java-selection-element-items",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetSelectionStateByIndex",
      "Name": "Get Java selection state by index",
      "Description": "Returns the selection state of a child element in a selection (typically an item in a list or drop-down) by providing the child element index. You can retrieve all selection child element items to check their index by using the action 'Get Java selection element items'.",
      "Anchor": "#get-java-selection-state-by-index",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetSelectionStateByName",
      "Name": "Get Java selection state by name",
      "Description": "Returns the selection state of a child element in a selection (typically an item in a list or drop-down) by providing the child element name. You can retrieve all selection child element items to check their name by using the action 'Get Java selection element items'.",
      "Anchor": "#get-java-selection-state-by-name",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetTableCellAtScreenCoordinate",
      "Name": "Get Java table cell at screen coordinate",
      "Description": "If a Java table cell that is a child element of the table exists at the specified coordinates, this action will identify the element, its properties and will optionally return a handle to the table cell element.",
      "Anchor": "#get-java-table-cell-at-screen-coordinate",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetTableCellProperties",
      "Name": "Get Java table cell properties",
      "Description": "Returns the properties and contents of a specified cell within a Java table element. This is an element with rows, columns, a header and cells (i.e. a table). You can optionally specify whether to determine which if the cell is currently visible on screen and it's coordinates by enumerating the viewport.  The viewport element typically contains the table (e.g. it is a parent element of the table) and represents the visible area of the table.",
      "Anchor": "#get-java-table-cell-properties",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetTableContents",
      "Name": "Get Java table contents",
      "Description": "Returns the contents of a Java table element. This is an element with rows, columns, a header and cells (i.e. a table).",
      "Anchor": "#get-java-table-contents",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetTableProperties",
      "Name": "Get Java table properties",
      "Description": "Returns the properties of a Java table element. This is an element with rows, columns, a header and cells (i.e. a table). You can optionally specify whether to determine which components of the table are currently visible on screen by enumerating the viewport.  The viewport element typically contains the table (e.g. it is a parent element of the table) and represents the visible area of the table.",
      "Anchor": "#get-java-table-properties",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetUIAElementProperties",
      "Name": "Get Java properties for UIA element",
      "Description": "Returns all Java properties of a UIA element. This can be useful if you are uncertain which field holds the property values required.",
      "Anchor": "#get-java-properties-for-uia-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetVisibleBoundingRectangleOfElementOnscreen",
      "Name": "Get visible bounding rectangle of Java element",
      "Description": "Retrieves the visible bounds of a Java element. Typically, the Java Access Bridge will return the virtual positional values of an element, regardless of whether the element is visible on screen and these virtual values are provided by the 'Get Java element properties' action. With larger elements (e.g. a table element which can scroll) as these may not always be visible on screen, this action returns the coordinates of the currently visible area of the element.",
      "Anchor": "#get-visible-bounding-rectangle-of-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGetWindowsAccessBridgeInfo",
      "Name": "Get windows access bridge info",
      "Description": "Returns information about the Windows Access Bridge (WAB) for a particular Java VM ID, including the Java and Windows DLL versions. The Java VM ID can be obtained as an output from the 'Get Java element properties' action.",
      "Anchor": "#get-windows-access-bridge-info",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGlobalDoubleLeftMouseClickOnElement",
      "Name": "Global double left mouse click on Java element",
      "Description": "Moves the mouse to the centre of a Java element and double clicks the left mouse button.",
      "Anchor": "#global-double-left-mouse-click-on-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGlobalInputPasswordIntoElement",
      "Name": "Global input password into Java element",
      "Description": "Moves the mouse to centre of the Java element, focusses it, left clicks, and presses keys. Typically used with a password input that will not accept native UIA input methods.",
      "Anchor": "#global-input-password-into-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGlobalInputTextIntoElement",
      "Name": "Global input text into Java element",
      "Description": "Moves the mouse to centre of the Java element, focusses it, left clicks, and presses keys. Typically used with a text input that will not accept native UIA input methods.",
      "Anchor": "#global-input-text-into-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGlobalLeftMouseClickOnElement",
      "Name": "Global left mouse click on Java element",
      "Description": "Moves the mouse to the centre of a Java element and clicks the left mouse button.",
      "Anchor": "#global-left-mouse-click-on-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGlobalMiddleMouseClickOnElement",
      "Name": "Global middle mouse click on Java element",
      "Description": "Moves the mouse to the centre of a Java element and clicks the middle mouse button.",
      "Anchor": "#global-middle-mouse-click-on-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGlobalMouseClickOnTableCell",
      "Name": "Global mouse click on Java table cell",
      "Description": "Moves the mouse to the centre of a Java table cell and clicks the specified mouse button.",
      "Anchor": "#global-mouse-click-on-java-table-cell",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABGlobalRightMouseClickOnElement",
      "Name": "Global right mouse click on Java element",
      "Description": "Moves the mouse to the centre of a Java element and clicks the right mouse button.",
      "Anchor": "#global-right-mouse-click-on-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABInputPasswordIntoElement",
      "Name": "Input password into Java element",
      "Description": "Inputs a password into a Java element (typically a password entry field), replacing the existing text.",
      "Anchor": "#input-password-into-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABInputTextIntoElement",
      "Name": "Input text into Java element",
      "Description": "Inputs text into a Java element (typically a text entry field), either replacing the existing text or inserting the new value at a specific position.",
      "Anchor": "#input-text-into-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABIsJABHandleSameObject",
      "Name": "Are Java element handles the same",
      "Description": "Compares two Java element handles for Java elements to see if they represent the same Java object. This can be useful if you have identified an element and retrieved a handle to its parent.",
      "Anchor": "#are-java-element-handles-the-same",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABIsJavaWindow",
      "Name": "Is Java window",
      "Description": "Returns whether a UIA window is a Java element.",
      "Anchor": "#is-java-window",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABIsTableCellVisibleOnscreen",
      "Name": "Is Java table cell visible onscreen",
      "Description": "Returns whether a specific table cell within a Java table element is currently visible onscreen.",
      "Anchor": "#is-java-table-cell-visible-onscreen",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABPerformActionOnElement",
      "Name": "Perform action on Java element",
      "Description": "Performs an accessible action for a Java element. These accessible actions for a specific element can be queried by using the 'Get actions for Java element' action. Some common actions are 'click' for a button or 'select-all' for a text element.",
      "Anchor": "#perform-action-on-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABPressElement",
      "Name": "Press Java element",
      "Description": "Presses a Java element (typically a button).",
      "Anchor": "#press-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABSetSelectionByIndex",
      "Name": "Select Java list element by index",
      "Description": "Selects the list element that matches the specified index. This is typically used to select an item in a dropdown / menu item.",
      "Anchor": "#select-java-list-element-by-index",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABSetSelectionByName",
      "Name": "Select Java list element by name",
      "Description": "Selects the list element with the specified name. This is typically used to select an item in a dropdown / menu item.",
      "Anchor": "#select-java-list-element-by-name",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABWaitForDesktopElement",
      "Name": "Wait for Java desktop element",
      "Description": "Waits for a Java desktop element (typically a window) to exist.",
      "Anchor": "#wait-for-java-desktop-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABWaitForDesktopElementToNotExist",
      "Name": "Wait for Java desktop element to not exist",
      "Description": "Waits for a Java desktop element (typically a window) to no longer exist.",
      "Anchor": "#wait-for-java-desktop-element-to-not-exist",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABWaitForElement",
      "Name": "Wait for Java element",
      "Description": "Waits for a Java element (typically an individual element within a window such as a button or a text input area) to exist.",
      "Anchor": "#wait-for-java-element",
      "IsDeprecated": false
    },
    {
      "OperationId": "JABWaitForElementToNotExist",
      "Name": "Wait for Java element to not exist",
      "Description": "Waits for a Java element (typically an individual element within a window such as a button or a text input area) to no longer exist.",
      "Anchor": "#wait-for-java-element-to-not-exist",
      "IsDeprecated": false
    }
  ]
}